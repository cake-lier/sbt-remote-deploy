Index.PACKAGES = {"io" : [], "io.github" : [], "io.github.cakelier" : [{"name" : "io.github.cakelier.Remote", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/cakelier\/Remote.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/cakelier\/Remote.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/cakelier\/Remote.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/cakelier\/Remote.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/cakelier\/Remote.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/cakelier\/Remote.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/cakelier\/Remote.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/Remote.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/Remote.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/Remote.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/cakelier\/Remote.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/cakelier\/Remote.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/cakelier\/Remote.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/cakelier\/Remote.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/cakelier\/Remote.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/cakelier\/Remote.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/cakelier\/Remote.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/cakelier\/Remote.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/cakelier\/Remote.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runPipe", "tail" : "(cmd: String)(stdout: OutputStream, stderr: OutputStream): Future[Result]", "member" : "io.github.cakelier.Remote.runPipe", "link" : "io\/github\/cakelier\/Remote.html#runPipe(cmd:String)(stdout:java.io.OutputStream,stderr:java.io.OutputStream):scala.concurrent.Future[io.github.cakelier.Result]", "kind" : "abstract def"}, {"label" : "run", "tail" : "(cmd: String): Future[Result]", "member" : "io.github.cakelier.Remote.run", "link" : "io\/github\/cakelier\/Remote.html#run(cmd:String):scala.concurrent.Future[io.github.cakelier.Result]", "kind" : "abstract def"}], "shortDescription" : "A remote location, a server the user has access to through a SSH connection.", "trait" : "io\/github\/cakelier\/Remote.html", "kind" : "trait"}, {"name" : "io.github.cakelier.RemoteConfiguration", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/cakelier\/RemoteConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "verifyIdentity", "tail" : ": Boolean", "member" : "io.github.cakelier.RemoteConfiguration.verifyIdentity", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#verifyIdentity:Boolean", "kind" : "abstract val"}, {"label" : "fingerprint", "tail" : ": Option[String]", "member" : "io.github.cakelier.RemoteConfiguration.fingerprint", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#fingerprint:Option[String]", "kind" : "abstract val"}, {"label" : "privateKeyPassphrase", "tail" : ": Option[String]", "member" : "io.github.cakelier.RemoteConfiguration.privateKeyPassphrase", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#privateKeyPassphrase:Option[String]", "kind" : "abstract val"}, {"label" : "privateKeyFile", "tail" : ": Option[Path]", "member" : "io.github.cakelier.RemoteConfiguration.privateKeyFile", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#privateKeyFile:Option[java.nio.file.Path]", "kind" : "abstract val"}, {"label" : "password", "tail" : ": Option[String]", "member" : "io.github.cakelier.RemoteConfiguration.password", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#password:Option[String]", "kind" : "abstract val"}, {"label" : "user", "tail" : ": String", "member" : "io.github.cakelier.RemoteConfiguration.user", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#user:String", "kind" : "abstract val"}, {"label" : "port", "tail" : ": Int", "member" : "io.github.cakelier.RemoteConfiguration.port", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#port:Int", "kind" : "abstract val"}, {"label" : "host", "tail" : ": String", "member" : "io.github.cakelier.RemoteConfiguration.host", "link" : "io\/github\/cakelier\/RemoteConfiguration.html#host:String", "kind" : "abstract val"}], "shortDescription" : "A configuration for accessing a remote location.", "trait" : "io\/github\/cakelier\/RemoteConfiguration.html", "kind" : "trait"}, {"name" : "io.github.cakelier.RemoteDeployPlugin", "shortDescription" : "The SBT plugin, the main entrypoint to this project.", "object" : "io\/github\/cakelier\/RemoteDeployPlugin$.html", "members_object" : [{"label" : "projectSettings", "tail" : ": Seq[sbt.Setting[_]]", "member" : "io.github.cakelier.RemoteDeployPlugin.projectSettings", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#projectSettings:Seq[sbt.Setting[_]]", "kind" : "lazy val"}, {"label" : "autoImport", "tail" : "", "member" : "io.github.cakelier.RemoteDeployPlugin.autoImport", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#autoImport", "kind" : "object"}, {"label" : "derivedProjects", "tail" : "(proj: ProjectDefinition[_]): Seq[Project]", "member" : "sbt.AutoPlugin.derivedProjects", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#derivedProjects(proj:sbt.ProjectDefinition[_]):Seq[sbt.Project]", "kind" : "def"}, {"label" : "extraProjects", "tail" : "(): Seq[Project]", "member" : "sbt.AutoPlugin.extraProjects", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#extraProjects:Seq[sbt.Project]", "kind" : "def"}, {"label" : "globalSettings", "tail" : "(): Seq[sbt.Def.Setting[_]]", "member" : "sbt.AutoPlugin.globalSettings", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#globalSettings:Seq[sbt.Def.Setting[_]]", "kind" : "def"}, {"label" : "buildSettings", "tail" : "(): Seq[sbt.Def.Setting[_]]", "member" : "sbt.AutoPlugin.buildSettings", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#buildSettings:Seq[sbt.Def.Setting[_]]", "kind" : "def"}, {"label" : "projectConfigurations", "tail" : "(): Seq[Configuration]", "member" : "sbt.AutoPlugin.projectConfigurations", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#projectConfigurations:Seq[sbt.librarymanagement.Configuration]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "sbt.AutoPlugin.toString", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#toString():String", "kind" : "def"}, {"label" : "label", "tail" : ": String", "member" : "sbt.AutoPlugin.label", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#label:String", "kind" : "val"}, {"label" : "requires", "tail" : "(): Plugins", "member" : "sbt.AutoPlugin.requires", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#requires:sbt.Plugins", "kind" : "def"}, {"label" : "trigger", "tail" : "(): PluginTrigger", "member" : "sbt.AutoPlugin.trigger", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#trigger:sbt.PluginTrigger", "kind" : "def"}, {"label" : "noTrigger", "tail" : "(): PluginTrigger", "member" : "sbt.PluginsFunctions.noTrigger", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#noTrigger:sbt.PluginTrigger", "kind" : "def"}, {"label" : "allRequirements", "tail" : "(): PluginTrigger", "member" : "sbt.PluginsFunctions.allRequirements", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#allRequirements:sbt.PluginTrigger", "kind" : "def"}, {"label" : "empty", "tail" : "(): Plugins", "member" : "sbt.PluginsFunctions.empty", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#empty:sbt.Plugins", "kind" : "def"}, {"label" : "&&", "tail" : "(o: Basic): Plugins", "member" : "sbt.Plugins.Basic.&&", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#&&(o:sbt.Plugins.Basic):sbt.Plugins", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/cakelier\/RemoteDeployPlugin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.cakelier.Result", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/cakelier\/Result.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/cakelier\/Result.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/cakelier\/Result.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/cakelier\/Result.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/cakelier\/Result.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/cakelier\/Result.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/cakelier\/Result.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/Result.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/Result.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/cakelier\/Result.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/cakelier\/Result.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/cakelier\/Result.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/cakelier\/Result.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/cakelier\/Result.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/cakelier\/Result.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/cakelier\/Result.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/cakelier\/Result.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/cakelier\/Result.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/cakelier\/Result.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "errorMessage", "tail" : ": Option[String]", "member" : "io.github.cakelier.Result.errorMessage", "link" : "io\/github\/cakelier\/Result.html#errorMessage:Option[String]", "kind" : "abstract val"}, {"label" : "exitCode", "tail" : ": Option[Int]", "member" : "io.github.cakelier.Result.exitCode", "link" : "io\/github\/cakelier\/Result.html#exitCode:Option[Int]", "kind" : "abstract val"}], "shortDescription" : "The result of a command executed on a Remote.", "trait" : "io\/github\/cakelier\/Result.html", "kind" : "trait"}], "sbt" : []};